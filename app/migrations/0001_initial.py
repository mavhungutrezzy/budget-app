# Generated by Django 5.0.3 on 2024-03-12 16:56

import colorfield.fields
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='TransactionGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('muted', models.BooleanField(default=False, help_text='This checkbox allows you to temporarily "mute" a transaction from appearing in any calculations.  Useful to get a quick idea of what your net income would look like without a particular transaction.')),
                ('group_type', models.CharField(choices=[('ex', 'Expense'), ('in', 'Income')], default='ex', max_length=2)),
                ('group_name', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(default='Your Name', max_length=100)),
                ('birth_date', models.DateField(blank=True, help_text='Used to extrapolate your age for calculations in the future.', null=True)),
                ('starting_value', models.DecimalField(blank=True, decimal_places=2, help_text='A value to start the calculations with, like a checking account balance.', max_digits=14, null=True)),
                ('accent_color', colorfield.fields.ColorField(default='#9400d3', help_text="Used throughout the app's UI.", image_field=None, max_length=25, samples=None)),
                ('dark_mode', models.BooleanField(default=True)),
                ('toggle_raise', models.BooleanField(default=False, help_text='Toggle to use your raise percentage in income calculations after the first year.')),
                ('raise_pct', models.DecimalField(decimal_places=2, default=Decimal('1.0300000000000000266453525910037569701671600341796875'), max_digits=4, verbose_name='Raise Percentage')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_set', related_query_name='custom_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', related_query_name='custom_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'User',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('muted', models.BooleanField(default=False, help_text='This checkbox allows you to temporarily "mute" a transaction from appearing in any calculations.  Useful to get a quick idea of what your net income would look like without a particular transaction.')),
                ('type', models.CharField(choices=[('ex', 'Expense'), ('in', 'Income')], default='ex', max_length=2)),
                ('name', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=14)),
                ('multiplier', models.IntegerField(default=1, help_text='Amount will be multiplied by this value for a final total when this field is used in calculations.  This can be useful to track recurring expenses throughout the month, like groceries every week etc.')),
                ('user', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.customuser')),
                ('group', models.ForeignKey(default=1, on_delete=models.SET(1), to='app.transactiongroup')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
